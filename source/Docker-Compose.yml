
# version: "3.8"

services:

  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    hostname: spark-master
    ports:
      - "8080:8080"  # Spark Web UI
      - "7077:7077"  # Spark Master Port
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_PORT=7077
      - SPARK_MASTER_WEBUI_PORT=8080
      - PYSPARK_PYTHON=/usr/local/bin/python  # Ensure the same version is used
      - PYSPARK_DRIVER_PYTHON=/usr/local/bin/python  # Ensure the same version is used
    # volumes:
    #   - spark-master-data:/bitnami

  spark-worker-1:
    image: bitnami/spark:latest
    container_name: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_WEBUI_PORT=8081
      - PYSPARK_PYTHON=/usr/local/bin/python  # Ensure the same version is used
      - PYSPARK_DRIVER_PYTHON=/usr/local/bin/python  # Ensure the same version is used
    depends_on:
      - spark-master
    # volumes:
    #   - spark-worker-1-data:/bitnami

  spark-worker-2:
    image: bitnami/spark:latest
    container_name: spark-worker-2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_WEBUI_PORT=8082
      - PYSPARK_PYTHON=/usr/local/bin/python  # Ensure the same version is used
      - PYSPARK_DRIVER_PYTHON=/usr/local/bin/python  # Ensure the same version is used
    depends_on:
      - spark-master
    # volumes:
    #   - spark-worker-2-data:/bitnami

  java_environment:
    image: openjdk:11
    stdin_open: true  # Keep STDIN open even if not attached
    tty: true         # Allocate a pseudo-TTY 
    volumes:
      - "java-openjdk-11:/usr/local/openjdk-11/"

  python_environment:
    image: python:3.12.4
    stdin_open: true  # Keep STDIN open even if not attached
    tty: true         # Allocate a pseudo-TTY 
    environment:
      - JAVA_HOME=/usr/local/openjdk-11/
    volumes:
      - "java-openjdk-11:/usr/local/openjdk-11/"

      - type: bind
        source: ..
        target: /container/Project_1

    depends_on:
      - java_environment

  postgres_database_1:
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=Postgres_Password_3000
      - POSTGRES_USER=Postgres_User

    ports:
      - "3000:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  sqlserver_database_1:
    image: mcr.microsoft.com/mssql/server:2022-latest
    user: root
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=SQL_Server_Password_1000
    ports:
      - "1000:1433"
    # command: 
    #   - /bin/bash -c "for f in /source/init_script/SQL_Server_1/*.sql; do /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${SA_PASSWORD} -i $f; `SQL Server - Init completed`"

    volumes:
      - sqlserver_data1:/var/opt/mssql/data

  sqlserver_database_2:
    image: mcr.microsoft.com/mssql/server:2022-latest
    user: root
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=SQL_Server_Password_2000
    ports:
      - "2000:1433"
    volumes:
      - sqlserver_data2:/var/opt/mssql/data
      

volumes:
  postgres_data:  # Optional
  sqlserver_data1:  # Optional for SQL Server
  sqlserver_data2:  # Optional for MariaDB
  java-openjdk-11:
